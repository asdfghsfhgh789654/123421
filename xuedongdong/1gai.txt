Django的用户登录模块User
view下:
from django.contrib.auth import authenticate
from django.contrib.auth.models import User

# Create your views here.
from django.http import HttpResponseRedirect
from django.shortcuts import render_to_response
def alogin(request):
    errors= []
    account=None
    password=None
    if request.method == 'POST' :
        if not request.POST.get('account'):
            errors.append('Please Enter account')
        else:
            account = request.POST.get('account')
        if not request.POST.get('password'):
            errors.append('Please Enter password')
        else:
            password= request.POST.get('password')
        if account is not None and password is not None :
             user = authenticate(username=account,password=password)
             if user is not None:
                 if user.is_active:
                     login(request,user)
                     return HttpResponseRedirect('/index')
                 else:
                     errors.append('disabled account')
             else :
                  errors.append('invaild user')
    return render_to_response('account/login.html', {'errors': errors})
def register(request):
    errors= []
    account=None
    password=None
    password2=None
    email=None
    CompareFlag=False
 
    if request.method == 'POST':
        if not request.POST.get('account'):
            errors.append('Please Enter account')
        else:
            account = request.POST.get('account')
        if not request.POST.get('password'):
            errors.append('Please Enter password')
        else:
            password= request.POST.get('password')
        if not request.POST.get('password2'):
            errors.append('Please Enter password2')
        else:
            password2= request.POST.get('password2')
        if not request.POST.get('email'):
            errors.append('Please Enter email')
        else:
            email= request.POST.get('email')
 
        if password is not None and password2 is not None:
            if password == password2:
                CompareFlag = True
            else :
                errors.append('password2 is diff password ')
 
 
        if account is not None and password is not None and password2 is not None and email is not None and CompareFlag :
            user=User.objects.create_user(account,email,password)
            user.is_active=True
            user.save
            return HttpResponseRedirect('/account/login')
 
 
    return render_to_response('account/register.html', {'errors': errors})
 
def alogout(request):
    logout(request)
    return HttpResponseRedirect('/index')




在templates下创建account目录。在下面创建login.html ：
<!DOCTYPE html>
<html>
<head>
    <title>Welcome login </title>
</head>
<body>
    <p>Account Login </p>
 
    {% if errors %}
        <li>
            {% for error in errors %}
             <p style="color: red;">
                Please correct the error: {{error}} below.
             </p>
              {% endfor %}
        </li>
    {% endif %}
 
    <form action="" method="post">
        <input type = 'text' placeholder="Please input account" name="account">
       <br>
 
        <input type = 'password' placeholder="Please input password" name="password">
        <br>
        <input type = 'submit' placeholder="Login" value="Login">
        <br>
        <a href="/account/register">register new accout</a>
    </form>
</body>
</html>






同样的方式创建register.html：
<html>
<head>
    <title>Welcome Register New Account</title>
</head>
<body>
 
 {% if errors %}
        <li>
 
            {% for error in errors %}
             <p style="color: red;">
                Please correct the error: {{error}} below.
             </p>
              {% endfor %}
        </li>
    {% endif %}
<table>
    <form action="" method="post">
        <tr>
            <td>
                <label >Account:</label>
            </td>
            <td>
                <input type = 'text' placeholder="Please input account" name = 'account'>
            </td>
        </tr>
        <tr>
            <td>
                <label >Password:</label>
            </td>
            <td>
              <input type = 'password' placeholder="Please input password" name = 'password'>
            </td>
        </tr>
         <tr>
             <td>
                <label >Password:</label>
             </td>
             <td>
                 <input type = 'password' placeholder="Please input password" name ='password2'>
             </td>
 
         </tr>
         <tr>
             <td>
                 <label>email:</label>
             </td>
             <td>
                 <input type="email" placeholder="Please input email" name = 'email'>
             </td>
         </tr>
          <tr>
 
              <td>
                   <input type = 'submit' placeholder="Login" value="Login">
              </td>
          </tr>
    </form>
</table>
</body>
</html>




url(r'^account/login/$', alogin),
    url(r'^account/register/$', register),
    url(r'^account/logout/$', alogout),



修正后：
from django.contrib.auth import authenticate, login, logout
from django.contrib.auth.models import User

# Create your views here.
from django.http import HttpResponseRedirect
from django.shortcuts import render_to_response
def alogin(request):
    errors= []
    account=None
    password=None
    if request.method == 'POST' :
        if not request.POST.get('account'):
            errors.append('Please Enter account')
        else:
            account = request.POST.get('account')
        if not request.POST.get('password'):
            errors.append('Please Enter password')
        else:
            password= request.POST.get('password')
        if account is not None and password is not None :
             user = authenticate(username=account,password=password)
             if user is not None:
                 if user.is_active:
                     login(request,user)
                     return HttpResponseRedirect('/index')
                 else:
                     errors.append('disabled account')
             else :
                  errors.append('invaild user')
    return render_to_response('account/login.html', {'errors': errors})
def register(request):
    errors= []
    account=None
    password=None
    password2=None
    email=None
    CompareFlag=False

    if request.method == 'POST':
        if not request.POST.get('account'):
            errors.append('Please Enter account')
        else:
            account = request.POST.get('account')
        if not request.POST.get('password'):
            errors.append('Please Enter password')
        else:
            password= request.POST.get('password')
        if not request.POST.get('password2'):
            errors.append('Please Enter password2')
        else:
            password2= request.POST.get('password2')
        if not request.POST.get('email'):
            errors.append('Please Enter email')
        else:
            email= request.POST.get('email')

        if password is not None and password2 is not None:
            if password == password2:
                CompareFlag = True
            else :
                errors.append('password2 is diff password ')


        if account is not None and password is not None and password2 is not None and email is not None and CompareFlag :
            user=User.objects.create_user(account,email,password)
            user.is_active=True
            user.save
            return HttpResponseRedirect('/account/login')


    return render_to_response('account/register.html', {'errors': errors})

def alogout(request):
    logout(request)
    return HttpResponseRedirect('/index')




"""users URL Configuration

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/1.8/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  url(r'^$', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  url(r'^$', Home.as_view(), name='home')
Including another URLconf
    1. Add an import:  from blog import urls as blog_urls
    2. Add a URL to urlpatterns:  url(r'^blog/', include(blog_urls))
"""
from django.conf.urls import include, url
# from django.contrib import admin
from user.views import alogin, register, alogout

urlpatterns = [
    # url(r'^admin/', include(admin.site.urls)),
    url(r'^account/login/$', alogin),
    url(r'^account/register/$', register),
    url(r'^account/logout/$', alogout),
]

